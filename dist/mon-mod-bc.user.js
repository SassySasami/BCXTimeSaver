// ==UserScript==
// @name         MonModBC
// @namespace    https://github.com/SassySasami/BCXTimeSaver
// @version      0.1.1
// @description  Exemple de mod BC utilisant le Mod SDK
// @author       Sassy
// @match https://*.bondageprojects.elementfx.com/R*/*
// @match https://*.bondage-europe.com/R*/*
// @match https://*.bondageprojects.com/R*/*
// @match https://*.bondage-asia.com/Club/R*
// @match http://localhost:*/*
// @grant        none
// @run-at       document-start
// @updateURL    https://raw.githubusercontent.com/SassySasami/BCXTimeSaver/main/dist/mon-mod-bc.user.js
// @downloadURL  https://raw.githubusercontent.com/SassySasami/BCXTimeSaver/main/dist/mon-mod-bc.user.js
// ==/UserScript==
!function(){"use strict";function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t,n={};var o,r=(t||(t=1,o=n,function(){const e="1.2.0";function t(e){alert("Mod ERROR:\n"+e);const t=new Error(e);throw console.error(t),t}const n=new TextEncoder;function r(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}function a(e){const t=new Set;return e.filter(e=>!t.has(e)&&t.add(e))}const i=new Map,c=new Set;function d(e){c.has(e)||(c.add(e),console.warn(e))}function l(e){const t=[],n=new Map,o=new Set;for(const r of m.values()){const a=r.patching.get(e.name);if(a){t.push(...a.hooks);for(const[t,i]of a.patches.entries())n.has(t)&&n.get(t)!==i&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\nPattern:\n${t}\nPatch1:\n${n.get(t)||""}\nPatch2:\n${i}`),n.set(t,i),o.add(r.name)}}t.sort((e,t)=>t.priority-e.priority);const r=function(e,t){if(0===t.size)return e;let n=e.toString().replaceAll("\r\n","\n");for(const[o,r]of t.entries())n.includes(o)||d(`ModSDK: Patching ${e.name}: Patch ${o} not applied`),n=n.replaceAll(o,r);return(0,eval)(`(${n})`)}(e.original,n);let a=function(t){var n,a;const i=null===(a=(n=y.errorReporterHooks).hookChainExit)||void 0===a?void 0:a.call(n,e.name,o),c=r.apply(this,t);return null==i||i(),c};for(let n=t.length-1;n>=0;n--){const o=t[n],r=a;a=function(t){var n,a;const i=null===(a=(n=y.errorReporterHooks).hookEnter)||void 0===a?void 0:a.call(n,e.name,o.mod),c=o.hook.apply(this,[t,e=>{if(1!==arguments.length||!Array.isArray(t))throw new Error(`Mod ${o.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==i||i(),c}}return{hooks:t,patches:n,patchesSources:o,enter:a,final:r}}function s(e,t=!1){let o=i.get(e);if(o)t&&(o.precomputed=l(o));else{let t=window;const a=e.split(".");for(let n=0;n<a.length-1;n++)if(t=t[a[n]],!r(t))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,n+1).join(".")} is not object`);const c=t[a[a.length-1]];if("function"!=typeof c)throw new Error(`ModSDK: Function ${e} to be patched not found`);const d=function(e){let t=-1;for(const o of n.encode(e)){let e=255&(t^o);for(let t=0;t<8;t++)e=1&e?-306674912^e>>>1:e>>>1;t=t>>>8^e}return((-1^t)>>>0).toString(16).padStart(8,"0").toUpperCase()}(c.toString().replaceAll("\r\n","\n")),s={name:e,original:c,originalHash:d};o=Object.assign(Object.assign({},s),{precomputed:l(s),router:()=>{},context:t,contextProperty:a[a.length-1]}),o.router=function(e){return function(...t){return e.precomputed.enter.apply(this,[t])}}(o),i.set(e,o),t[o.contextProperty]=o.router}return o}function u(){for(const e of i.values())e.precomputed=l(e)}function p(){const e=new Map;for(const[t,n]of i)e.set(t,{name:t,original:n.original,originalHash:n.originalHash,sdkEntrypoint:n.router,currentEntrypoint:n.context[n.contextProperty],hookedByMods:a(n.precomputed.hooks.map(e=>e.mod)),patchedByMods:Array.from(n.precomputed.patchesSources)});return e}const m=new Map;function f(e){m.get(e.name)!==e&&t(`Failed to unload mod '${e.name}': Not registered`),m.delete(e.name),e.loaded=!1,u()}function g(e,n){e&&"object"==typeof e||t("Failed to register mod: Expected info object, got "+typeof e),"string"==typeof e.name&&e.name||t("Failed to register mod: Expected name to be non-empty string, got "+typeof e.name);let o=`'${e.name}'`;"string"==typeof e.fullName&&e.fullName||t(`Failed to register mod ${o}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),o=`'${e.fullName} (${e.name})'`,"string"!=typeof e.version&&t(`Failed to register mod ${o}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&"string"!=typeof e.repository&&t(`Failed to register mod ${o}: Expected repository to be undefined or string, got ${typeof e.version}`),null==n&&(n={}),n&&"object"==typeof n||t(`Failed to register mod ${o}: Expected options to be undefined or object, got ${typeof n}`);const a=!0===n.allowReplace,i=m.get(e.name);i&&(i.allowReplace&&a||t(`Refusing to load mod ${o}: it is already loaded and doesn't allow being replaced.\nWas the mod loaded multiple times?`),f(i));const c=e=>{let t=p.patching.get(e.name);return t||(t={hooks:[],patches:new Map},p.patching.set(e.name,t)),t},d=(e,n)=>(...r)=>{var a,i;const c=null===(i=(a=y.errorReporterHooks).apiEndpointEnter)||void 0===i?void 0:i.call(a,e,p.name);p.loaded||t(`Mod ${o} attempted to call SDK function after being unloaded`);const d=n(...r);return null==c||c(),d},l={unload:d("unload",()=>f(p)),hookFunction:d("hookFunction",(e,n,r)=>{"string"==typeof e&&e||t(`Mod ${o} failed to patch a function: Expected function name string, got ${typeof e}`);const a=s(e),i=c(a);"number"!=typeof n&&t(`Mod ${o} failed to hook function '${e}': Expected priority number, got ${typeof n}`),"function"!=typeof r&&t(`Mod ${o} failed to hook function '${e}': Expected hook function, got ${typeof r}`);const d={mod:p.name,priority:n,hook:r};return i.hooks.push(d),u(),()=>{const e=i.hooks.indexOf(d);e>=0&&(i.hooks.splice(e,1),u())}}),patchFunction:d("patchFunction",(e,n)=>{"string"==typeof e&&e||t(`Mod ${o} failed to patch a function: Expected function name string, got ${typeof e}`);const a=s(e),i=c(a);r(n)||t(`Mod ${o} failed to patch function '${e}': Expected patches object, got ${typeof n}`);for(const[r,a]of Object.entries(n))"string"==typeof a?i.patches.set(r,a):null===a?i.patches.delete(r):t(`Mod ${o} failed to patch function '${e}': Invalid format of patch '${r}'`);u()}),removePatches:d("removePatches",e=>{"string"==typeof e&&e||t(`Mod ${o} failed to patch a function: Expected function name string, got ${typeof e}`);const n=s(e);c(n).patches.clear(),u()}),callOriginal:d("callOriginal",(e,n,r)=>{"string"==typeof e&&e||t(`Mod ${o} failed to call a function: Expected function name string, got ${typeof e}`);const a=s(e);return Array.isArray(n)||t(`Mod ${o} failed to call a function: Expected args array, got ${typeof n}`),a.original.apply(null!=r?r:globalThis,n)}),getOriginalHash:d("getOriginalHash",e=>("string"==typeof e&&e||t(`Mod ${o} failed to get hash: Expected function name string, got ${typeof e}`),s(e).originalHash))},p={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:l,loaded:!0,patching:new Map};return m.set(e.name,p),Object.freeze(l)}function b(){const e=[];for(const t of m.values())e.push({name:t.name,fullName:t.fullName,version:t.version,repository:t.repository});return e}let y;const h=void 0===window.bcModSdk?window.bcModSdk=function(){const t={version:e,apiVersion:1,registerMod:g,getModsInfo:b,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return y=t,Object.freeze(t)}():(r(window.bcModSdk)||t("Failed to init Mod SDK: Name already in use"),1!==window.bcModSdk.apiVersion&&t(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);Object.defineProperty(o,"__esModule",{value:!0}),o.default=h}()),n),a=e(r);!function(){const e="MonModBC";try{const t=a.registerMod({name:e,fullName:"Mon Mod Bondage Club",version:"0.3.0",repository:"https://github.com/SassySasami/BCTest"});console.log("[MonModBC] Mod chargé via SDK:",t)}catch(e){console.warn("[MonModBC] SDK indisponible (non bloquant):",e)}const t="MonModBC.rules",n="MonModBC.rules.title",o="Règles BCX",r=["Respect et consentement obligatoires. Pas de harcèlement.","Pas de contenu NSFW explicite dans le chat public.","Aucune triche, exploit ou outil perturbateur.","Restez dans le thème RP si la salle l’indique.","Langage correct, pas d’insultes ni de propos discriminants.","Suivez les instructions des modérateurs/organisateurs.","Pas de spam, flood ou publicité non autorisée."].join("\n");let i=!0,c=null,d="";function l(e,t){try{const n=localStorage.getItem(e);return null==n?t:n}catch{return t}}function s(e,t){try{localStorage.setItem(e,t)}catch{}}function u(e,t=1400){let n=document.getElementById("mmdbc-toast");n||(n=document.createElement("div"),n.id="mmdbc-toast",n.className="mmdbc-toast",document.body.appendChild(n)),n.textContent=e,n.style.opacity="1",n.style.transform="translate(-50%, 0)",window.setTimeout(()=>{n.style.opacity="0",n.style.transform="translate(-50%, 20px)"},t)}function p(){if(document.getElementById("monmodbc-panel"))return;!function(){if(document.getElementById("monmodbc-style"))return;const e=document.createElement("style");e.id="monmodbc-style",e.textContent="\n      #monmodbc-panel {\n        position: fixed; top: 80px; right: 20px; z-index: 2147483647;\n        background: rgba(20,20,28,0.96); color: #fff;\n        font: 13px/1.4 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;\n        border: 1px solid #3a3a4a; border-radius: 10px;\n        box-shadow: 0 10px 30px rgba(0,0,0,0.35);\n        width: 380px; user-select: none; display: none;\n      }\n      #monmodbc-panel header {\n        display: flex; align-items: center; gap: 8px; justify-content: space-between;\n        padding: 10px 12px; background: #2a2a3a; border-radius: 10px 10px 0 0; cursor: move;\n      }\n      #monmodbc-title-input {\n        flex: 1 1 auto; max-width: 100%; min-width: 0;\n        background: transparent; border: none; color: #fff; font-weight: 600; outline: none;\n      }\n      #monmodbc-close {\n        width: 22px; height: 22px; border-radius: 6px; border: 1px solid #555; background: #3a3a4a; color: #fff;\n      }\n      #monmodbc-body { display: flex; flex-direction: column; gap: 10px; padding: 10px 12px; }\n      #monmodbc-text { width: 100%; height: 140px; resize: vertical; background: #11131a; color: #fff;\n        border: 1px solid #3a3a4a; border-radius: 8px; padding: 8px; }\n      .mmdbc-row { display: flex; gap: 8px; align-items: center; }\n      .mmdbc-row.right { justify-content: flex-end; }\n      .mmdbc-btn {\n        background: #3a3a4a; color: #fff; border: 1px solid #555; border-radius: 8px; padding: 6px 10px; cursor: pointer;\n      }\n      .mmdbc-select, .mmdbc-input, .mmdbc-textarea {\n        background: #11131a; color: #fff; border: 1px solid #3a3a4a; border-radius: 8px; padding: 6px 8px;\n      }\n      #mmdbc-rule-box { border: 1px solid #3a3a4a; border-radius: 8px; padding: 8px; background: #0d0f15; }\n      .mmdbc-kv { display: grid; grid-template-columns: 120px 1fr; gap: 6px 10px; align-items: center; }\n      .mmdbc-toast {\n        position: fixed; bottom: 18px; left: 50%; transform: translate(-50%, 20px);\n        background: #111; color: #fff; padding: 10px 14px; border-radius: 10px; opacity: 0;\n        transition: opacity .2s ease, transform .2s ease; z-index: 2147483647;\n      }\n      #monmodbc-mini {\n        position: fixed; top: 80px; right: 20px; z-index: 2147483647;\n        background: #2a2a3a; color: #fff; border: 1px solid #555; border-radius: 999px; padding: 8px 10px; cursor: pointer;\n        display: none;\n      }\n      code.mmdbc {\n        display: block; white-space: pre-wrap; background: #0b0d13; border: 1px solid #33384d;\n        padding: 8px; border-radius: 6px; font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;\n        font-size: 12px;\n      }\n    ",document.head.appendChild(e)}();const a=document.createElement("button");a.id="monmodbc-mini",a.textContent="Règles",document.body.appendChild(a);const p=document.createElement("div");p.id="monmodbc-panel",p.style.display=i?"block":"none",document.body.appendChild(p);const m=document.createElement("header"),f=document.createElement("input");f.id="monmodbc-title-input",f.type="text",f.value=l(n,o);const g=document.createElement("button");g.id="monmodbc-close",g.className="mmdbc-btn",g.textContent="–",m.appendChild(f),m.appendChild(g),p.appendChild(m);const b=document.createElement("div");b.id="monmodbc-body",p.appendChild(b);const y=document.createElement("textarea");y.id="monmodbc-text",y.value=l(t,r),b.appendChild(y);const h=document.createElement("div");h.className="mmdbc-row right";const x=document.createElement("button");x.className="mmdbc-btn",x.textContent="Enregistrer";const v=document.createElement("button");v.className="mmdbc-btn",v.textContent="Copier";const w=document.createElement("button");w.className="mmdbc-btn",w.textContent="Réinitialiser",h.append(x,v,w),b.appendChild(h);const E=document.createElement("div");E.id="mmdbc-rule-box",b.appendChild(E);const M=document.createElement("div");M.className="mmdbc-kv";const k=document.createElement("label");k.textContent="Rule ID";const $=document.createElement("input");$.className="mmdbc-input",$.placeholder="ex: no_outfit_removal",$.autocomplete="off";const C=document.createElement("label");C.textContent="Target char (ID)";const S=document.createElement("input");S.className="mmdbc-input",S.placeholder="optionnel (nombre)",S.type="number";const R=document.createElement("label");R.textContent="Dictionnaire";const N=document.createElement("textarea");N.className="mmdbc-textarea",N.rows=3,N.placeholder="clé1=valeur1, clé2=valeur2";const D=document.createElement("div");D.className="mmdbc-row";const B=document.createElement("button");B.className="mmdbc-btn",B.textContent="Obtenir état";const O=document.createElement("button");O.className="mmdbc-btn",O.textContent="Trigger";const j=document.createElement("button");j.className="mmdbc-btn",j.textContent="Trigger attempt",D.append(B,O,j);const L=document.createElement("code");function F(e){try{L.textContent="string"==typeof e?e:JSON.stringify(e,null,2)}catch{L.textContent=String(e)}}function P(){p.style.display=i?"block":"none",a.style.display=i?"none":"block"}async function I(e){const t=$.value.trim();if(!t)return void F("Indique un Rule ID.");if(!c)return void F("BCX non détecté.");const n=S.value.trim(),o=""===n?null:function(e){const t=Number(e);return Number.isFinite(t)?t:null}(n);if(""!==n&&null===o)return void F("Target char doit être vide ou un nombre.");const r=function(e){const t={};for(const n of e.split(",").map(e=>e.trim()).filter(Boolean)){const e=n.indexOf("=");if(e<=0)continue;const o=n.slice(0,e).trim(),r=n.slice(e+1).trim();o&&(t[o]=r)}return t}(N.value);try{const n=c.getRuleState(t);if(!n)return void F(`Règle introuvable: "${t}"`);e?n.triggerAttempt(o,r):n.trigger(o,r),F(`OK: ${e?"triggerAttempt":"trigger"} envoyé pour "${t}".`)}catch(e){console.warn("[MonModBC] trigger/attempt a échoué:",e),F("Erreur pendant trigger (voir console).")}}L.className="mmdbc",L.textContent="BCX: en attente...",M.append(k,$,C,S,R,N),E.append(M,D,L),function(e,t){let n=!1,o=0,r=0,a=0,i=0;t.addEventListener("mousedown",t=>{n=!0,o=t.clientX,r=t.clientY;const c=e.getBoundingClientRect();a=c.left,i=c.top,e.style.left=`${a}px`,e.style.top=`${i}px`,e.style.right="auto",e.style.bottom="auto",t.preventDefault()}),window.addEventListener("mousemove",t=>{if(!n)return;const c=t.clientX-o,d=t.clientY-r;e.style.left=`${a+c}px`,e.style.top=`${i+d}px`}),window.addEventListener("mouseup",()=>{n=!1})}(p,m),g.addEventListener("click",()=>{i=!1,P()}),a.addEventListener("click",()=>{i=!0,P()}),f.addEventListener("input",()=>s(n,f.value)),x.addEventListener("click",()=>{s(t,y.value),u("Règles sauvegardées")}),v.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(y.value),u("Copié")}catch{u("Copie impossible")}}),w.addEventListener("click",()=>{f.value=o,y.value=r,s(n,o),s(t,r),u("Rétabli")}),B.addEventListener("click",()=>{if(d=$.value.trim(),!d)return void F("Indique un Rule ID.");F(function(e){if(!c)return"BCX non détecté.";try{const t=c.getRuleState(e);return t?{rule:String(t.rule??e),ruleDefinition:t.ruleDefinition??null,inEffect:!!t.inEffect,isEnforced:!!t.isEnforced,isLogged:!!t.isLogged,customData:t.customData,internalData:t.internalData}:`Règle introuvable: "${e}"`}catch(e){return console.warn("[MonModBC] getRuleState a échoué:",e),"Erreur lors de getRuleState (voir console)."}}(d))}),O.addEventListener("click",async()=>{await I(!1)}),j.addEventListener("click",async()=>{await I(!0)}),c=function(){const t=window,n=t.bcx??t.BCX??t.game?.addons?.get?.("BCX");if(!n||"function"!=typeof n.getModApi)return null;try{return n.getModApi(e)??null}catch{return null}}(),F(c?"BCX détecté. Saisis un Rule ID puis “Obtenir état”.":"BCX non détecté. Ouvre le jeu avec BCX chargé."),window.addEventListener("keydown",e=>{!e.altKey||"g"!==e.key&&"G"!==e.key||(i=!i,P(),e.preventDefault())}),P(),console.log("[MonModBC] Panneau prêt.")}var m;m=()=>{if(document.body)p();else{const e=new MutationObserver(()=>{document.body&&(e.disconnect(),p())});e.observe(document.documentElement,{childList:!0,subtree:!0})}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",m,{once:!0}):m()}()}();
